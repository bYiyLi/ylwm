package com.yi.ylwm.xcb;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /usr/include/xcb/xproto.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xcb_warp_pointer_request_t extends Structure {
	public byte major_opcode;
	public byte pad0;
	public short length;
	/** C type : xcb_window_t */
	public int src_window;
	/** C type : xcb_window_t */
	public int dst_window;
	public short src_x;
	public short src_y;
	public short src_width;
	public short src_height;
	public short dst_x;
	public short dst_y;
	public xcb_warp_pointer_request_t() {
		super();
	}
	@Override
protected List<String> getFieldOrder(){
		return Arrays.asList("major_opcode", "pad0", "length", "src_window", "dst_window", "src_x", "src_y", "src_width", "src_height", "dst_x", "dst_y");
	}
	public xcb_warp_pointer_request_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xcb_warp_pointer_request_t implements Structure.ByReference {
		
	};
	public static class ByValue extends xcb_warp_pointer_request_t implements Structure.ByValue {
		
	};
}
