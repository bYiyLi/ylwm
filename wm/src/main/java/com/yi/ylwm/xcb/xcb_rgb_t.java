package com.yi.ylwm.xcb;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /usr/include/xcb/xproto.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xcb_rgb_t extends Structure {
	public short red;
	public short green;
	public short blue;
	/** C type : uint8_t[2] */
	public byte[] pad0 = new byte[2];
	public xcb_rgb_t() {
		super();
	}
	@Override
protected List<String> getFieldOrder(){
		return Arrays.asList("red", "green", "blue", "pad0");
	}
	/** @param pad0 C type : uint8_t[2] */
	public xcb_rgb_t(short red, short green, short blue, byte pad0[]) {
		super();
		this.red = red;
		this.green = green;
		this.blue = blue;
		if ((pad0.length != this.pad0.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.pad0 = pad0;
	}
	public xcb_rgb_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xcb_rgb_t implements Structure.ByReference {
		
	};
	public static class ByValue extends xcb_rgb_t implements Structure.ByValue {
		
	};
}
